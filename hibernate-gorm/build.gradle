plugins {
    id("groovy")
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.0-M4"
    //id("io.micronaut.test-resources") version "4.0.0-M4"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
}

dependencies {
    // specs
    implementation("jakarta.annotation:jakarta.annotation-api")

    //micronaut
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.beanvalidation:micronaut-hibernate-validator")
    implementation("io.micronaut.groovy:micronaut-runtime-groovy")

    // gorm and hibernate
    implementation("io.micronaut.groovy:micronaut-hibernate-gorm")
	implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("org.apache.tomcat:tomcat-jdbc")
    runtimeOnly("org.postgresql:postgresql")
	
	// yaml support
    runtimeOnly("org.yaml:snakeyaml")

    // reactor and httpclient
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.reactor:micronaut-reactor")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    // logging
    runtimeOnly("ch.qos.logback:logback-classic")

    //test
    testImplementation("org.testcontainers:postgresql")
    testImplementation("org.testcontainers:spock")
    testImplementation("org.testcontainers:testcontainers")
}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("spock2")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
//	testResources {
//        additionalModules.add("jdbc-postgresql")
//    }
}

test {
    useJUnitPlatform()
}
