plugins {
    id("com.github.johnrengelman.shadow") version "8.1.1"
    id("io.micronaut.application") version "4.0.0"
    id("io.micronaut.test-resources") version "4.0.1"
}

version = "0.1"
group = "com.example"

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
}

dependencies {
    // jakarta specs
    implementation("jakarta.annotation:jakarta.annotation-api")

    //micronaut framework
    implementation("io.micronaut.validation:micronaut-validation")
    implementation("io.micronaut:micronaut-jackson-databind")
    implementation("io.micronaut.reactor:micronaut-reactor")

    annotationProcessor("io.micronaut.data:micronaut-data-processor")
    annotationProcessor("io.micronaut.validation:micronaut-validation-processor")

    //flyway
    implementation("io.micronaut.flyway:micronaut-flyway")
    implementation("io.micronaut.sql:micronaut-jdbc-hikari")
    runtimeOnly("org.postgresql:postgresql")

    //lombok
    compileOnly("org.projectlombok:lombok")
    testCompileOnly("org.projectlombok:lombok")

    //r2dbc
    implementation("io.micronaut.data:micronaut-data-r2dbc")
    runtimeOnly("org.postgresql:r2dbc-postgresql")
    implementation("io.projectreactor:reactor-core:3.5.8")

    // yaml support
    runtimeOnly("org.yaml:snakeyaml")

    // httpclient and ReactorHttpClient
    implementation("io.micronaut:micronaut-http-client")
    implementation("io.micronaut.reactor:micronaut-reactor-http-client")

    //logging
    runtimeOnly("ch.qos.logback:logback-classic")

    // annotation processor
    annotationProcessor("org.projectlombok:lombok")
    testAnnotationProcessor("org.projectlombok:lombok")

    // test
    testImplementation("org.assertj:assertj-core")
    testImplementation("org.mockito:mockito-core")
    testResourcesService("org.postgresql:postgresql")

    //test containers support
//    testImplementation("org.testcontainers:junit-jupiter")
//    testImplementation("org.testcontainers:postgresql")
//    testImplementation("org.testcontainers:testcontainers")

    // reactor test
    testImplementation("io.projectreactor:reactor-test:3.5.8")

}


application {
    mainClass.set("com.example.Application")
}
java {
    sourceCompatibility = JavaVersion.toVersion("17")
    targetCompatibility = JavaVersion.toVersion("17")
}

graalvmNative.toolchainDetection = false
micronaut {
    runtime("netty")
    testRuntime("junit5")
    processing {
        incremental(true)
        annotations("com.example.*")
    }
}

test {
    useJUnitPlatform()
}
